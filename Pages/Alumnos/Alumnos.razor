@page "/alumnos"
@inject IAlumnoService alumnoService
@using BlazorVsCode.Services
@using BlazorVsCode.Shared
@using BlazorVsCode.Models
@inject HttpClient Http

<PageTitle>Alumnos</PageTitle>

<ComponentTitle Title="Alumnos"/>

@if (students == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <NavLink class="nav-link" href="nuevoalumno"> Nuevo Alumno </NavLink>
    <table class="table">
        <thead>
            <tr>
                <th>Apellido y Nombre</th>
                <th>Teléfono</th>
                <th>Dirección</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in students)
            {
                <tr>
                    <td>@student.apellidoNombre</td>
                    <td>@student.telefono</td>
                    <td>@student.direccion</td>
                    <td>@student.email</td>
                    <td> <NavLink class="nav-link" href=@($"editaralumno?id={@student.id}")> Editar </NavLink> </td>
                    <td> <NavLink class="nav-link" href=@($"editaralumno?id={@student.id}")> Eliminar </NavLink> </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Alumno>? students;


    protected override async Task OnInitializedAsync()
    {
        students = await obtenerAlumnos();
    }

    private async Task<List<Alumno>> obtenerAlumnos()
    {
        return await alumnoService.Get();
    }

}